image: php:8.2

definitions:
  caches:
    npm: ~/.npm
    composer: ~/.composer/cache

pipelines:
  branches:
    master:
      - step:
          name: Build and Test
          caches:
            - composer
            - npm
          script:
            - apt-get update && apt-get install -y unzip git nodejs npm
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --no-progress --no-dev
            - npm ci
            - npm run build
            # (Opcjonalnie) php artisan test
          artifacts:
            - vendor/**
            - public/build/**
            - composer.lock
            - package-lock.json
            - .env.example
      - step:
          name: Deploy to Test Server
          deployment: test
          script:
            # Przygotowanie SSH
            - apt-get update && apt-get install -y openssh-client rsync
            - mkdir -p ~/.ssh
            - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            - chmod 600 ~/.ssh/id_rsa
            - ssh-keyscan -H s0.mydevil.net >> ~/.ssh/known_hosts
            - echo "Sprawdzanie połączenia SSH..."
            - ssh -v -o StrictHostKeyChecking=no vetternkraft@s0.mydevil.net "echo 'Połączenie SSH działa poprawnie'"

            # Debug - wyświetl vendor przed rsync
            - ls -la vendor
            - ls -la vendor/laravel || echo "Brak laravel/"

            # RSYNC: wykluczamy newralgiczne i lokalne pliki/dane
            - rsync -avz --delete \
                --exclude='.git/' \
                --exclude='node_modules/' \
                --exclude='.env' \
                --exclude='database/database.sqlite' \
                --exclude='storage/logs/' \
                --exclude='storage/framework/cache/' \
                --exclude='storage/framework/sessions/' \
                --exclude='storage/framework/views/' \
                ./ vetternkraft@s0.mydevil.net:/home/vetternkraft/domains/dev.salon-bw.pl/salonbw/

            # (Opcjonalnie) utwórz plik SQLite jeśli go nie ma, po deploy
            - ssh vetternkraft@s0.mydevil.net "if [ ! -f /home/vetternkraft/domains/dev.salon-bw.pl/salonbw/database/database.sqlite ]; then touch /home/vetternkraft/domains/dev.salon-bw.pl/salonbw/database/database.sqlite; chmod 664 /home/vetternkraft/domains/dev.salon-bw.pl/salonbw/database/database.sqlite; fi"

            # Komendy po wdrożeniu - zawsze przez Twoją binarkę PHP!
            - ssh vetternkraft@s0.mydevil.net "cd /home/vetternkraft/domains/dev.salon-bw.pl/salonbw && /home/vetternkraft/bin/php /usr/local/bin/composer dump-autoload && /home/vetternkraft/bin/php artisan config:clear && /home/vetternkraft/bin/php artisan route:clear && /home/vetternkraft/bin/php artisan cache:clear && /home/vetternkraft/bin/php artisan view:clear"
