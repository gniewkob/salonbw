name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_REGISTRY_URL: https://registry.npmjs.org
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            backend/salonbw-backend/package-lock.json
      - name: Configure npm registry
        run: |
          REGISTRY_HOST=$(echo "$NPM_REGISTRY_URL" | sed -e 's#^https://##' -e 's#^http://##')
          echo "registry=${NPM_REGISTRY_URL}" > ~/.npmrc
          echo "//${REGISTRY_HOST}/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
      - name: Install frontend deps
        run: |
          cd frontend
          ../scripts/npm-ci-retry.sh
      - name: Lint frontend
        run: |
          cd frontend
          npm run lint
      - name: Test frontend
        run: |
          cd frontend
          npm test -- --coverage
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Install backend deps
        run: |
          cd backend/salonbw-backend
          ../../scripts/npm-ci-retry.sh
      - name: Lint backend
        run: |
          cd backend/salonbw-backend
          npm run lint
      - name: Test backend
        run: |
          cd backend/salonbw-backend
          npm test -- --coverage
      - name: Generate OpenAPI docs
        run: |
          cd backend/salonbw-backend
          set -o pipefail
          npm run swagger:generate 2>&1 | tee swagger.log
          git diff --exit-code openapi.json
          if grep -i warning swagger.log; then
            echo "OpenAPI generation produced warnings"
            exit 1
          fi
      - name: Install Cypress dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libatk1.0-0 libgtk-3-0 libnss3 libxss1 libasound2t64
      - name: Install Cypress binary
        run: |
          cd frontend
          npm run cypress:install
      - name: E2E tests
        run: |
          cd frontend
          npm run e2e
      - name: Deploy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: echo "Deploying..."
