{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Hello world message"
          }
        },
        "summary": "Root endpoint",
        "tags": [
          "app"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_getHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Service is up"
          }
        },
        "summary": "Health check",
        "tags": [
          "health"
        ]
      }
    },
    "/users/profile": {
      "get": {
        "operationId": "UsersController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current user profile"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List users (optionally filter by role)",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create user",
        "tags": [
          "Users"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Tokens successfully generated"
          }
        },
        "summary": "Log in user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered"
          }
        },
        "summary": "Register new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens successfully refreshed"
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "auth"
        ]
      }
    },
    "/appointments": {
      "get": {
        "operationId": "AppointmentsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "List appointments (admin, optional filters)",
        "tags": [
          "appointments"
        ]
      },
      "post": {
        "description": "Employees or admins must specify clientId in the request body.",
        "operationId": "AppointmentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment created"
          },
          "400": {
            "description": "clientId must be provided when creating appointments as staff"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create appointment",
        "tags": [
          "appointments"
        ]
      }
    },
    "/appointments/me": {
      "get": {
        "operationId": "AppointmentsController_findMine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Appointment"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get appointments for current user",
        "tags": [
          "appointments"
        ]
      }
    },
    "/appointments/{id}/cancel": {
      "patch": {
        "operationId": "AppointmentsController_cancel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Appointment not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cancel appointment",
        "tags": [
          "appointments"
        ]
      }
    },
    "/appointments/{id}/complete": {
      "patch": {
        "operationId": "AppointmentsController_complete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Appointment completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Appointment not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Complete appointment",
        "tags": [
          "appointments"
        ]
      }
    },
    "/appointments/{id}": {
      "patch": {
        "operationId": "AppointmentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update appointment (reschedule start time)",
        "tags": [
          "appointments"
        ]
      }
    },
    "/services": {
      "get": {
        "operationId": "ServicesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all services",
        "tags": [
          "services"
        ]
      },
      "post": {
        "operationId": "ServicesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create service",
        "tags": [
          "services"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "operationId": "ServicesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get service by id",
        "tags": [
          "services"
        ]
      },
      "patch": {
        "operationId": "ServicesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update service",
        "tags": [
          "services"
        ]
      },
      "delete": {
        "operationId": "ServicesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service removed"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remove service",
        "tags": [
          "services"
        ]
      }
    },
    "/products": {
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all products",
        "tags": [
          "products"
        ]
      },
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create product",
        "tags": [
          "products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get product by id",
        "tags": [
          "products"
        ]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update product",
        "tags": [
          "products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product removed"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remove product",
        "tags": [
          "products"
        ]
      }
    },
    "/appointments/{appointmentId}/formulas": {
      "post": {
        "operationId": "AppointmentFormulasController_addFormula",
        "parameters": [
          {
            "name": "appointmentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFormulaDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Formula"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Add formula to appointment",
        "tags": [
          "formulas"
        ]
      }
    },
    "/clients/me/formulas": {
      "get": {
        "operationId": "ClientFormulasController_findMine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Formula"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get formulas for current user",
        "tags": [
          "formulas"
        ]
      }
    },
    "/clients/{id}/formulas": {
      "get": {
        "operationId": "ClientFormulasController_findForClient",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Formula"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get formulas for client",
        "tags": [
          "formulas"
        ]
      }
    },
    "/commissions/me": {
      "get": {
        "operationId": "CommissionsController_findMine",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Commission"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get commissions for current user",
        "tags": [
          "commissions"
        ]
      }
    },
    "/commissions/employees/{id}": {
      "get": {
        "operationId": "CommissionsController_findForEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Commission"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get commissions for employee",
        "tags": [
          "commissions"
        ]
      }
    },
    "/employees/{id}/commissions/summary": {
      "get": {
        "operationId": "CommissionsController_getSummaryForEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "to",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary amount",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "amount": 0
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get commission summary for employee",
        "tags": [
          "commissions"
        ]
      }
    },
    "/commissions": {
      "get": {
        "operationId": "CommissionsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Commission"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all commissions",
        "tags": [
          "commissions"
        ]
      }
    },
    "/dashboard": {
      "get": {
        "operationId": "DashboardController_getSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSummaryDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get dashboard summary",
        "tags": [
          "dashboard"
        ]
      }
    }
  },
  "info": {
    "title": "SalonBW API",
    "description": "The SalonBW API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique identifier",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "role": {
            "type": "string",
            "description": "User role",
            "enum": [
              "client",
              "employee",
              "admin"
            ],
            "example": "client"
          },
          "phone": {
            "type": "object",
            "description": "International phone number",
            "example": "+123456789",
            "nullable": true
          },
          "commissionBase": {
            "type": "number",
            "description": "Commission base for the user",
            "example": 0
          },
          "receiveNotifications": {
            "type": "boolean",
            "description": "Whether the user receives notifications",
            "example": true
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "role",
          "phone",
          "commissionBase",
          "receiveNotifications"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          },
          "phone": {
            "type": "string",
            "description": "International phone number",
            "example": "+123456789"
          },
          "commissionBase": {
            "type": "number",
            "description": "Commission base for the user",
            "example": 0
          },
          "receiveNotifications": {
            "type": "boolean",
            "description": "Whether the user receives notifications",
            "example": true
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email address",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User full name",
            "example": "John Doe"
          }
        },
        "required": [
          "email",
          "name"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGci..."
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "Appointment": {
        "type": "object",
        "properties": {}
      },
      "CreateAppointmentDto": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "number"
          },
          "serviceId": {
            "type": "number"
          },
          "startTime": {
            "type": "string"
          },
          "clientId": {
            "type": "number",
            "description": "Required when creating appointments as Employee or Admin"
          }
        },
        "required": [
          "employeeId",
          "serviceId",
          "startTime"
        ]
      },
      "UpdateAppointmentDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "description": "New start time ISO string"
          },
          "endTime": {
            "type": "string",
            "description": "New end time ISO string"
          }
        },
        "required": [
          "startTime"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {}
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {}
      },
      "Product": {
        "type": "object",
        "properties": {}
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {}
      },
      "CreateFormulaDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "required": [
          "description",
          "date"
        ]
      },
      "Formula": {
        "type": "object",
        "properties": {}
      },
      "Commission": {
        "type": "object",
        "properties": {}
      },
      "DashboardSummaryDto": {
        "type": "object",
        "properties": {
          "clientCount": {
            "type": "number",
            "description": "Total number of clients",
            "example": 42
          },
          "employeeCount": {
            "type": "number",
            "description": "Total number of employees",
            "example": 7
          },
          "todayAppointments": {
            "type": "number",
            "description": "Number of appointments scheduled for today",
            "example": 5
          },
          "upcomingAppointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            }
          }
        },
        "required": [
          "clientCount",
          "employeeCount",
          "todayAppointments",
          "upcomingAppointments"
        ]
      }
    }
  }
}
